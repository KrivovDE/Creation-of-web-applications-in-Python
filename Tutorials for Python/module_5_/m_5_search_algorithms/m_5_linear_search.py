from typing import List


def linear_search(_list: List[int], _key: int) -> int:
    for i in range(len(_list)):
        if _list[i] == _key:
            return i
    return -1


list1 = [1, 3, 5, 4, 7, 9]

print(linear_search(list1, 12))

# Можно использовать только 1 цикл!!!
# Вот вопрос задачи:
# Напишите программу, которая находит в массиве элемент, самый близкий по величине к данному числу.
# Входные данные
# В первой строке задается одно натуральное число N, не превосходящее 1000 – размер массива.
# Во второй строке содержатся N чисел – элементы массива (целые числа, не превосходящие по модулю 1000).
# В третьей строке вводится одно целое число x, не превосходящее по модулю 1000.
# Вывести значение элемента массива, ближайшее к x. Если таких чисел несколько, выведите любое из них.

# Примеры
# 5
# 1 2 3 4 5
# 6
# выходные данные
# 5
#

# 5
# 5 4 3 2 1
# 3
# выходные данные
# 3


# n: int = int(input())
# b: List[int] = list(map(int, input().split()))
# c: int = int(input())


def feat_1(lst: List[int], c: int):
    res: int = c
    diff: int = 2001

    for i_num in lst:
        if abs(c - i_num) < diff:
            res = i_num
            diff = abs(c - i_num)
    print(res)



_z: List[int] = [5, 4, 3, 2, 1]
_o: int = 3

feat_1(_z, _o)
